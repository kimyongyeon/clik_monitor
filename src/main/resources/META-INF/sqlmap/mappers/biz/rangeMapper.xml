<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 임계값 설정 및 목록조회 매퍼 -->
<mapper namespace="clikmonitor.nanet.go.kr.mapper.RangeMapper">

    <resultMap id="rangeMap" type="rangeVO"></resultMap>

    <sql id = "h_top">
        <![CDATA[
			SELECT  *
            FROM	(
            		SELECT 	ROWNUM RNUM, ALL_LIST.*
            		FROM  	(
        ]]>
    </sql>

    <sql id = "h_bottom">
        <![CDATA[
							) ALL_LIST
					)
			WHERE  	RNUM  > #{firstIndex}
	        AND  	RNUM <= #{firstIndex} + #{recordCountPerPage}
	    ]]>
    </sql>

    <sql id="range_where">
        <![CDATA[
          AND COLGOVER_SET.RASMBLY_ID(+) = COLGOVER.RASMBLY_ID
          AND COLGOVER.ISVIEW = 'Y'
          ORDER BY ORDR ASC
        ]]>
    </sql>

    <select id="selectRangeExcelExportList" parameterType="rangeSearchVO" resultType="rangeVO">
         SELECT /* selectRangeExcelExportList */
             COLGOVER.RASMBLY_ID rasmblyId
		   , COLGOVER.RASMBLY_NM rasmblyNm
           , COLGOVER_SET.SET_INTERVAL setInterval
           , REQ_PROCESSING_RATIO reqProcessingRatio
           /*, COLGOVER.LAST_UPDT_DT lastCntcDt*/
           , TO_CHAR(COLGOVER.LAST_CNTC_DT, 'YYYY-MM-DD') LASTCNTCDT
        FROM COLGOVER, COLGOVER_SET
        WHERE 1 = 1
        AND COLGOVER_SET.RASMBLY_ID(+) = COLGOVER.RASMBLY_ID
        AND COLGOVER.ISVIEW = 'Y'
        ORDER BY ORDR ASC
    </select>

    <!--임계값 설정 조회 -->
    <select id="selectRangeSetPagingList" parameterType="rangeSearchVO" resultMap="rangeMap">
        <!--<include refid="h_top" />-->
        <![CDATA[
        SELECT /* selectRangeSetPagingList */
             COLGOVER.RASMBLY_ID rasmblyId
		   , COLGOVER.RASMBLY_NM rasmblyNm
           , COLGOVER_SET.SET_INTERVAL setInterval
           , REQ_PROCESSING_RATIO reqProcessingRatio
             /*, COLGOVER.LAST_UPDT_DT lastCntcDt*/
           , TO_CHAR(COLGOVER.LAST_CNTC_DT, 'YYYY-MM-DD') LASTCNTCDT
           , COLGOVER_SET_ID
        FROM COLGOVER, COLGOVER_SET
		]]>
        WHERE 1 = 1
        <if test="keyWordType == 1"> <!-- 기관유형 -->
            AND SUBSTR(COLGOVER_SET.RASMBLY_ID,1,6) IN (
                SELECT LOASM_CODE AS LOASMCODE
                FROM ORGAN, COLGOVER
                WHERE INSTT_CL_CODE != #{brtcCode}
                AND ORGAN.LOASM_CODE = COLGOVER.RASMBLY_ID
            )
        </if>
        <if test="keyWordType == 2"> <!-- 지역 -->
            AND SUBSTR(COLGOVER_SET.RASMBLY_ID,1,3) IN (#{insttClCode})
        </if>
        <if test="keyWordType == 3"> <!-- 지방의회 -->
            AND SUBSTR(COLGOVER_SET.RASMBLY_ID,1,6) IN (#{loasmCode})
        </if>
        <!--<include refid="h_bottom" />-->
        <include refid="range_where" />
    </select>

    <!--임계값 설정 상세조회 -->
    <select id="selectRangeSetDetail" parameterType="rangeSearchVO" resultMap="rangeMap">
        <![CDATA[
             SELECT /* selectRangeSetDetail */
                 COLGOVER_SET.COLGOVER_SET_ID colgoverSetId
               , COLGOVER.RASMBLY_ID rasmblyId -- 지방의회 ID
               , COLGOVER.RASMBLY_NM rasmblyNm -- 지방의회명
               , COLGOVER_SET.SET_INTERVAL setInterval -- 응답시간
               , REQ_PROCESSING_RATIO reqProcessingRatio -- 요청처리율
               , COLGOVER.LAST_UPDT_DT lastCntcDt -- 최종수정일
            FROM COLGOVER, COLGOVER_SET
            WHERE COLGOVER.RASMBLY_ID = COLGOVER_SET.RASMBLY_ID
            AND COLGOVER_SET.RASMBLY_ID = #{rasmblyId}
		]]>
    </select>

    <!-- 임계값 설정 전체 레코드 수 -->
    <select id="selectRangeSetRecordTotalCount" parameterType="rangeSearchVO" resultType="int" >

        SELECT 	/* selectRangeSetRecordTotalCount */ COUNT(1)
        FROM	COLGOVER_SET, COLGOVER
        <include refid="range_where" />

    </select>

    <insert id="insertRangeSetProc" parameterType="rangeVO">
        INSERT INTO /* insertRangeSetProc */ COLGOVER_SET
        (
           COLGOVER_SET_ID
         , RASMBLY_ID /* '지방의회_ID'*/
         , SET_INTERVAL /* '요청시간간격'*/
         , REQ_PROCESSING_RATIO /* '요청처리율'*/
        )
        VALUES
        (
          (SELECT COUNT(COLGOVER_SET_ID) + 1 FROM COLGOVER_SET)
         , #{rasmblyId}
         , #{setInterval}
         , #{reqProcessingRatio}
        )
    </insert>

    <update id="updateRangeSetProc" parameterType="rangeVO">
        UPDATE /* updateRangeSetProc */ COLGOVER_SET SET
           SET_INTERVAL = #{setInterval}
         , REQ_PROCESSING_RATIO = #{reqProcessingRatio}
        WHERE RASMBLY_ID = #{rasmblyId}
        AND COLGOVER_SET_ID = #{colgoverSetId}
    </update>

    <delete id="deleteRangeSetProc" parameterType="rangeVO">
        DELETE FROM /* deleteRangeSetProc */ COLGOVER_SET WHERE RASMBLY_ID = #{rasmblyId} AND COLGOVER_SET_ID = #{colgoverSetId}
    </delete>


</mapper>
